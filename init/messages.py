from datetime import datetime
from init.class_user import payment_statuses, admin_list
from telebot import types


def start_message(message) -> str:
    if message.chat.first_name is not None:
        return f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.chat.first_name} üëã\n' \
               f'–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –∏ –æ–ø–ª–∞—Ç—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n'
    return f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ üëã\n' \
           f'–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –∏ –æ–ø–ª–∞—Ç—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n'


def function_list() -> str:
    return (f'–°–µ–≥–æ–¥–Ω—è: {datetime.now().date().strftime("%d.%m.%Y")}\n\n'
            f'–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏:\n'
            f'/help ‚Äî –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞\n'
            f'/balance - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –í–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞\n'
            f'/pay - –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏–ª–∏ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n'
            f'/training - –ó–∞–ø–∏—Å–∞—Ç—å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n'
            f'/training_info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–∏–∂–∞–π—à–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ\n\n\n'
            
            
            f'–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É:\n'
            f'/new_training - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n'
            f'/confirm_payments - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–≤—ã–µ –ø–ª–∞—Ç–µ–∂–∏\n'
            f'/confirm_training - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
    )


def pay() -> str:
    return f"–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏, –ø—Ä–æ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:\n"


def enter_amount_msg() -> str:
    return f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞:"


def success_payment(payment) -> str:
    return (f"–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω !\n"
            f"{payment}")


def check_balance(user) -> str:
    return f""


def payment_history_msg(payments_list):
    output_strig = ''

    for payment in payments_list:
        output_strig += f"–ü–ª–∞—Ç–µ–∂ –æ—Ç {payment[3]}\n–°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: {payment[2]} RUB\n–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞: {payment_statuses[payment[1]]}\n\n"
    return output_strig


def new_training_msg() -> str:
    return f"–ù–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n–ü—Ä–∏–º–µ—Ä: 01.01.2024"


def new_training_time_msg() -> str:
    return f"–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:\n–ü—Ä–∏–º–µ—Ä: 20.00"


def new_training_price_msg() -> str:
    return f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:\n–ü—Ä–∏–º–µ—Ä: 3500"


def new_training_notice(trainig):
    return f"–ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ {trainig.date} –≤ {trainig.time}\n–ñ–¥–∞—Ç—å —Ç–µ–±—è ?\n–ï—Å–ª–∏ —Ç—ã —Å –Ω–∞–º–∏, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /training –∏ –æ—Ç–ø—Ä–∞–≤—å +"


def training_notice(training):
    return f"–ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ {training[3]} –≤ {training[4]}\n–ñ–¥–∞—Ç—å —Ç–µ–±—è ?\n–î–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞–ø–∏—à–∏ + –∏–ª–∏ -"


def bad_voice_to_trainig():
    return f"–û—á–µ–Ω—å –∂–∞–ª—å...\n–ë—É–¥–µ–º –∂–¥–∞—Ç—å —Ç–µ–±—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ !)"


def add_to_training_success():
    return f"–û—Ç–ª–∏—á–Ω–æ!\n–ë—É–¥–µ–º –∂–¥–∞—Ç—å —Ç–µ–±—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ!"


def add_to_training_added():
    return f"–í—ã —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!"


def add_to_training_error():
    return f"–û—à–∏–±–∫–∞...\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"


def training_info(training_info, users_list):
    output_str = f"–ë–ª–∏–∂–∞–π—à–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–∫–∞ {training_info[3]} –≤ {training_info[4]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {training_info[5]}\n\n"

    if training_info[5] > 0:
        output_str += "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n"
        for user in users_list:
            output_str += f"{user}\n"
    return output_str


def confirm_payments_msg():
    return f"–°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –ø–ª–∞–µ–∂–µ–π –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "






def payment_info_confirm(payment_info):
    return f"–ù–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂!\n–°—É–º–º–∞: {payment_info[3]}\n–î–∞—Ç–∞: {payment_info[4]}\n–û—Ç: @{payment_info[1]} "


def no_new_payments_msg():
    return f'–ù–µ—Ç –Ω–æ–≤—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π'


def no_training_info():
    return f"–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫...\n–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞—Å—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É, –º—ã —Å—Ä–∞–∑—É –í–∞–º –Ω–∞–ø–∏—à–µ–º"


def confirm_training_msg():
    return f"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–ù–æ–≤–∞—è' –∏ —Å–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–∞–≤–Ω—É—é —Å—É–º–º—É —Å–æ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"


def confirm_training(training):
    text = f"–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ {training[3]} –≤ {training[4]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ: {training[5]}\n–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {training[2]} RUB\n\n"
    text += f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É ?"
    return text


def back_from_confirm_training():
    return f"–î–∞–Ω–Ω—ã–µ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ –ù–ï –∏–∑–º–µ–Ω–µ–Ω—ã.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞."


def created_soon():
    return f"–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n–ù–æ —Å–∫–æ—Ä–æ –≤—Å–µ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ !)"


def no_confirm_training_msg():
    return f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å.\n–°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É, –∞ —É–∂–µ –ø–æ—Å–ª–µ –µ–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å"


def payment_confirm_keyboard(payment) -> types.InlineKeyboardMarkup:
    """ CONFIRM PAYMENT KEYBOARD """

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'confirmed, {payment[0]}, {payment[3]}'))
    keyboard.add(types.InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'rejected, {payment[0]}, {payment[3]}'))
    return keyboard


def training_confirm_keyboard() -> types.InlineKeyboardMarkup:
    """ CONFIRM TRAINING KEYBOARD """

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data=f'complete training'))
    keyboard.add(types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', callback_data=f'cancel training'))
    keyboard.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=f'back'))
    return keyboard
